/**
 * Test file for testing the dt-icon-button-needs-icon rule.
 * A dt-icon-button must contain a dt-icon element.
 * No other content is allowed.
 */

@Component({
  template: `
    <button dt-icon-button variant="secondary"><dt-icon name="agent"></dt-icon></button>
    <button dt-icon-button variant="primary">
      <dt-icon name="dont-watch" *ngIf="isExpanded"></dt-icon>
      <dt-icon name="overview" *ngIf="!isExpanded"></dt-icon>
    </button>

    <button dt-icon-button variant="secondary"><dt-icon name="agent"></dt-icon> icon button</button>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   [A dt-icon-button must contain dt-icon elements only. No other nested elements are allowed.]
    <button dt-icon-button variant="secondary">icon button</button>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   [A dt-icon-button must contain dt-icon elements only. No other nested elements are allowed.]
    <button dt-icon-button variant="secondary"></button>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   [A dt-icon-button must not be empty, but must contain a dt-icon element.]
    <button *ngIf="isClearButtonAvailable(context.uiSchema, context.control)"
            dt-icon-button
            dtSuffix
            variant="nested"
            aria-label="Clear selection" i18n-aria-label
            title="Clear selection" i18n-title>
      <dt-icon name="abort" (click)="clearControl(context.control, $event)"></dt-icon>
    </button>
  `,
})
class TestClass { }
