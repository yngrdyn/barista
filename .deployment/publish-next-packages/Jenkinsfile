pipeline {
  agent {
    node {
      label 'default'
    }
  }

  options {
    timestamps()
    buildDiscarder(logRotator(numToKeepStr: '10'))
  }

  stages {

    stage('Checkout specified branch') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: "master"]],
          doGenerateSubmoduleConfigurations: false,
          extensions: [[
            $class: 'LocalBranch',
            localBranch: "master"
          ]],
          gitTool: 'Default',
          submoduleCfg: [],
          userRemoteConfigs: [[
            url: 'https://github.com/dynatrace-oss/barista.git'
          ]]
        ])
      }
    }

    stage('Install dependencies') {
      steps {
        nodejs(nodeJSInstallationName: 'Node 12.x') {
          ansiColor('xterm') {
            sh 'npm ci'
          }
        }
      }
    }

    stage('Build tokens and components') {
      steps {
        nodejs(nodeJSInstallationName: 'Node 12.x') {
          ansiColor('xterm') {
            sh 'npm run ng run shared-design-tokens:package -- --packageVersion="0.0.1-alpha.$BUILD_NUMBER"'
            sh 'npm run ng run package-elements:build -- --packageVersion="0.0.1-alpha.$BUILD_NUMBER"'
          }
        }
      }
    }

    stage('Publish') {
      steps {
        withCredentials([
          string(credentialsId: 'artifactory-url', variable: 'ARTIFACTORY_URL'),
          usernamePassword(credentialsId: 'npm-artifactory', passwordVariable: 'NPM_INTERNAL_PASSWORD', usernameVariable: 'NPM_INTERNAL_USER'),
        ]) {
          nodejs(nodeJSInstallationName: 'Node 12.x') {
            sh '''
              npm run publish-release-next -- --packageVersion="0.0.1-alpha.$BUILD_NUMBER"
            '''
          }
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
